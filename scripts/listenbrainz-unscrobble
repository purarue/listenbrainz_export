#!/usr/bin/env python3

import traceback
from typing import Sequence, Iterator

import click
import pylistenbrainz
from pylistenbrainz.errors import ListenBrainzAPIException


def delete_listen(msid: str, token: str) -> None:
    client = pylistenbrainz.ListenBrainz()
    client.set_auth_token(token)
    listen = pylistenbrainz.Listen(
        track_name="", artist_name="", listened_at=1, recording_msid=msid
    )
    # could throw pylistenbrainz.errors.ListenBrainzAPIException
    client.delete_listen(listen)


def parse_ids_from_input(ids: Sequence[str]) -> Iterator[str]:
    for id in ids:
        if id == "-":
            for line in click.get_text_stream("stdin"):
                yield line.strip()
        else:
            yield id


@click.command(
    epilog="recording_msid is the unique identifier of the recording you want to unscrobble\nSee https://listenbrainz.org/profile/ to generate a token"
)
@click.option(
    "--username",
    prompt="listenbrainz username",
    help="your listenbrainz username",
    envvar="LISTENBRAINZ_USERNAME",
    default=None,
)
@click.option(
    "--token",
    prompt="listenbrainz token",
    help="your listenbrainz token",
    envvar="LISTENBRAINZ_TOKEN",
    required=True,
)
@click.argument("RECORDING_MSID", nargs=-1, required=False)
def main(username: str | None, token: str, recording_msid: Sequence[str]) -> int:
    """
    Delete a listen from listenbrainz

    Can provide one or more recording msid as arguments or
    pipe them in from stdin and pass "-" as the argument
    """
    if not recording_msid:
        click.secho("No recording msid provided", fg="red", err=True)
        return 1
    assert isinstance(token, str)
    deleted = 0
    for msid in parse_ids_from_input(recording_msid):
        try:
            delete_listen(msid, token)
            deleted += 1
        except ListenBrainzAPIException as e:
            click.secho(str(e), fg="red", err=True)
            traceback.print_exc()
            return 1
    click.echo(
        f"Deleted {deleted} listens. They will be removed on listenbrainz server within about an hour",
        err=True,
    )
    return 0


if __name__ == "__main__":
    exit(main())
